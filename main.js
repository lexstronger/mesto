(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e,n,r,o){var i=o.handleCardClick,a=o.handleRemoveTrashButton,u=o.handlePutLike,c=o.handleRemoveLike;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardId=e._id,this._cardIdOwner=e.owner._id,this._likes=e.likes,this._userId=n,this._template=r,this._handleCardClick=i,this._handleRemoveTrashButton=a,this._handlePutLike=u,this._handleRemoveLike=c}var n,r;return n=t,(r=[{key:"_getElementFromTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".card__item").cloneNode(!0)}},{key:"getElement",value:function(){return this._element=this._getElementFromTemplate(),this._likeButton=this._element.querySelector(".card__like"),this._cardImage=this._element.querySelector(".card__image"),this._deleteButton=this._element.querySelector(".card__trash"),this._quantityLikes=this._element.querySelector(".card__quantity-likes"),this._quantityLikes.textContent=this._likes.length,this._cardImage.alt=this._name,this._cardImage.src=this._link,this._element.querySelector(".card__name").textContent=this._name,this._isOwnCard(),this._isLiked(),this._addEventListeners(),this._element}},{key:"_addEventListeners",value:function(){var t=this;this._deleteButton.addEventListener("click",(function(){t._cleanCardOfDeleteButton()})),this._likeButton.addEventListener("click",(function(){t._definesLikes()})),this._cardImage.addEventListener("click",(function(){t._openImage()}))}},{key:"handleDeleteCard",value:function(){this._element.remove(),this._element=null}},{key:"handleLikeCard",value:function(t){this._likeButton.classList.toggle("card__like_active"),this._likes=t.likes,this._quantityLikes.textContent=this._likes.length}},{key:"_openImage",value:function(){this._handleCardClick(this._name,this._link)}},{key:"_cleanCardOfDeleteButton",value:function(){this._handleRemoveTrashButton(this._cardId)}},{key:"_definesLikes",value:function(){this._likeButton.classList.contains("card__like_active")?this._handleRemoveLike(this._cardId):this._handlePutLike(this._cardId)}},{key:"_isOwnCard",value:function(){this._userId!==this._cardIdOwner&&this._deleteButton.remove()}},{key:"_isLiked",value:function(){var t=this;this._likes.some((function(e){return e._id===t._userId}))?this._likeButton.classList.add("card__like_active"):this._likeButton.classList.remove("card__like_active")}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();const r=n;function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var a=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._settings=e,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._settings.inputErrorClass),n.textContent=e,n.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass),e.textContent=""}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disabledButton():(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"_disabledButton",value:function(){this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled","disabled")}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"enableValidation",value:function(){var t=this;this._formElement.addEventListener("submit",(function(){t._disabledButton()})),this._setEventListeners()}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();const u=a;function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}const s=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.reverse().forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&l(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===f(o)?o:String(o)),r)}var o}const y=function(){function t(e){var n=e.profileNameSelector,r=e.profileDescriptionSelector,o=e.profileAvatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._profileName=document.querySelector(n),this._profileDescription=document.querySelector(r),this._profileAvatar=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,description:this._profileDescription.textContent,avatar:this._profileAvatar.src}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about,r=t.avatar;this._profileName.textContent=e,this._profileDescription.textContent=n,this._profileAvatar.src=r}},{key:"getUserId",value:function(){return this._id}}])&&p(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function d(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==h(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}const m=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._buttonClose=this._popup.querySelector(".popup__cross")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){t.preventDefault(),"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target.classList.contains("popup")&&t.close()})),this._buttonClose.addEventListener("click",(function(){t.close()}))}}])&&d(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},b.apply(this,arguments)}function g(t,e){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},g(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}const k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&g(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e._title=e._popup.querySelector(".popup__title"),e}return e=a,(n=[{key:"open",value:function(t){b(S(a.prototype),"open",this).call(this),this._image.src=t.link,this._image.alt=t.name,this._title.textContent=t.name}}])&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(m);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},P.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}const L=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(r);if(o){var n=j(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._handleFormSubmit=e,n._form=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._form.querySelectorAll(".popup__input")),n._buttonSubmit=n._form.querySelector(".popup__button"),n._textButtonSubmit=n._buttonSubmit.textContent,n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputsValues={},this._inputList.forEach((function(e){t._inputsValues[e.name]=e.value})),this._inputsValues}},{key:"setEventListeners",value:function(){var t=this;P(j(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())}))}},{key:"close",value:function(){P(j(a.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoadingData",value:function(t){this._buttonSubmit.textContent=t?"Сохранение...":this._textButtonSubmit}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(m);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=R(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},q.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function R(t){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},R(t)}const B=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=R(r);if(o){var n=R(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===C(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._formConfirm=e._popup.querySelector(".popup__form"),e}return e=a,(n=[{key:"changeHandleFormSubmit",value:function(t){this._handleSubmit=t}},{key:"setEventListeners",value:function(){var t=this;q(R(a.prototype),"setEventListeners",this).call(this),this._formConfirm.addEventListener("submit",(function(e){e.preventDefault(),t._handleSubmit()}))}}])&&I(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(m);function D(t){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},D(t)}function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==D(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}const A=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._basePath=e,this._token=n}var e,n;return e=t,(n=[{key:"_getHeaders",value:function(){return{"Content-Type":"application/json",authorization:this._token}}},{key:"_getJson",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._basePath,"/cards"),{headers:this._getHeaders()}).then(this._getJson)}},{key:"getCurrentUser",value:function(){return fetch("".concat(this._basePath,"/users/me"),{headers:this._getHeaders()}).then(this._getJson)}},{key:"editProfileInfo",value:function(t){return fetch("".concat(this._basePath,"/users/me"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({name:t.name,about:t.description})}).then(this._getJson)}},{key:"addNewCard",value:function(t){return fetch("".concat(this._basePath,"/cards"),{method:"POST",headers:this._getHeaders(),body:JSON.stringify({name:t.name,link:t.link})}).then(this._getJson)}},{key:"editProfileAvatar",value:function(t){return fetch("".concat(this._basePath,"/users/me/avatar"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({avatar:t.avatar})}).then(this._getJson)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._basePath,"/cards/").concat(t),{method:"DELETE",headers:this._getHeaders()}).then(this._getJson)}},{key:"putLike",value:function(t){return fetch("".concat(this._basePath,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._getHeaders()}).then(this._getJson)}},{key:"deleteLike",value:function(t){return fetch("".concat(this._basePath,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._getHeaders()}).then(this._getJson)}}])&&x(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();var H={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},J=document.querySelector(".profile__button"),N=document.querySelector(".popup_type_edit").querySelector(".popup__form"),U=N.querySelector(".popup__input_type_name"),V=N.querySelector(".popup__input_type_description"),F=document.querySelector(".popup_type_new-card").querySelector(".popup__form"),M=document.querySelector(".profile__add-button"),z=document.querySelector(".popup_type_avatar").querySelector(".popup__form"),$=document.querySelector(".profile__avatar-btn");function G(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var K=new A("https://mesto.nomoreparties.co/v1/cohort-61","d0048b8d-b031-4f52-9b12-6a593e4f7ea8");Promise.all([K.getInitialCards(),K.getCurrentUser()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(e,n)||function(t,e){if(t){if("string"==typeof t)return G(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Q=i._id,Y.renderItems(o),Z.setUserInfo({name:i.name,about:i.about,avatar:i.avatar})})).catch((function(t){console.log("Ошибка: ".concat(t))}));var Q,W=new k(".popup_type_image");W.setEventListeners();var X=function(t){var e=new r(t,Q,".template-card",{handleCardClick:function(t,e){W.open({name:t,link:e})},handleRemoveTrashButton:function(t){rt.open(),rt.changeHandleFormSubmit((function(){K.deleteCard(t).then((function(){rt.close(),e.handleDeleteCard()})).catch((function(t){console.log("Ошибка: ".concat(t))}))}))},handlePutLike:function(t){K.putLike(t).then((function(t){e.handleLikeCard(t)})).catch((function(t){console.log("Ошибка: ".concat(t))}))},handleRemoveLike:function(t){K.deleteLike(t).then((function(t){e.handleLikeCard(t)})).catch((function(t){console.log("Ошибка: ".concat(t))}))}});return e.getElement()},Y=new s({renderer:function(t){Y.addItem(X(t))}},".photo-grid__list"),Z=new y({profileNameSelector:".profile__name",profileDescriptionSelector:".profile__description",profileAvatarSelector:".profile__avatar"}),tt=new L(".popup_type_edit",(function(t){console.log(t),tt.renderLoadingData(!0),K.editProfileInfo(t).then((function(t){Z.setUserInfo(t),tt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){tt.renderLoadingData(!1)}))}));tt.setEventListeners();var et=new L(".popup_type_avatar",(function(t){et.renderLoadingData(!0),K.editProfileAvatar(t).then((function(t){Z.setUserInfo({avatar:t.avatar}),et.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){et.renderLoadingData(!1)}))}));et.setEventListeners(),J.addEventListener("click",(function(){tt.open();var t=Z.getUserInfo();U.value=t.name,V.value=t.description}));var nt=new L(".popup_type_new-card",(function(t){console.log(t),nt.renderLoadingData(!0),K.addNewCard(t).then((function(t){Y.addItem(X(t)),nt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){nt.renderLoadingData(!1)}))}));nt.setEventListeners();var rt=new B(".popup_type_confirm",(function(t){rt.changeHandleFormSubmit((function(){K.deleteCard(t).then((function(){rt.cardId.remove(),rt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))}))}))}));M.addEventListener("click",(function(){nt.open()})),$.addEventListener("click",(function(){et.open()}));var ot=new u(H,F),it=new u(H,N),at=new u(H,z);ot.enableValidation(),it.enableValidation(),at.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,